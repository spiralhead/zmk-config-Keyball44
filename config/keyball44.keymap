#define DEFAULT 0
#define NUM     1
#define MOV     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6
#define SYM     7

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp TAB      &kp Q     &kp W         &kp E        &kp R      &kp T                 &kp Y            &kp U  &kp I      &kp O    &kp P      &kp LBKT
&kp LEFT_SHIFT       &lt 4 A     &kp S         &kp D        &lt 3 F      &kp G                 &kp H            &kp J  &kp K      &kp L    &kp SEMI   &mt RIGHT_SHIFT SQT
&kp LCTRL  &kp Z     &kp X         &kp C        &lt 5 V      &kp B                 &kp N            &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp RCTRL
&kp LALT        &mo 1  &kp LGUI  &kp SPACE  &mo 2            &kp BACKSPACE  &kp ENTER                                        &kp DELETE
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp GRAVE   &kp BSLH  &none         &none         &none         &none                     &kp LBKT           &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RBKT  &kp KP_EQUAL
&none   &kp LGUI      &kp LALT      &kp LCTRL   &kp LSHIFT     &kp INS                    &kp PLUS           &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS         &kp COMMA
&none   &none         &none         &none         &none         &none                     &kp KP_MULTIPLY    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DIVIDE     &kp DOT
&trans  &trans        &trans        &trans        &trans                          &trans  &trans                                                                &kp NUMBER_0
            >;
        };

        movement_layer {
            label = "MOV";
            bindings = <
&kp LA(LC(TAB)) &kp PAUSE_BREAK &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2        &none      &kp F14       &none       &none      &none  &none
&kp LSHIFT      &kp LGUI     &kp LALT      &kp LCTRL     &kp LSHIFT    &kp INS               &kp LEFT   &kp DOWN    &kp UP      &kp RIGHT  &none  &none
&kp LCTRL       &none        &none         &none         &kp K_APP     &none                 &kp END    &kp PG_DN   &kp PG_UP   &kp HOME   &none  &none
&trans  &trans           &trans        &trans        &trans                         &trans  &trans                                          &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp ESC  &trans    &trans     &trans    &trans   &trans             &trans  &kp F7  &kp F8  &kp F9  &kp F12  &none
&trans   &kp LGUI  &kp LALT   &kp LCTRL &trans   &trans             &trans  &kp F4  &kp F5  &kp F6  &kp F11   &none
&trans   &trans    &trans     &trans    &trans   &none              &kp PAUSE_BREAK   &kp F1  &kp F2   &kp F3  &kp F10  &none
&trans   &trans    &trans     &trans    &trans                      &trans  &trans                              &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &none           &none          &none        &none     &none              &none         &none     &none  &none     &none     &none
&none   &trans  &mo 6  &kp LCTRL     &kp LSHIFT    &kp INS                       &none    &mkp LCLK  &mkp LCLK   &mkp RCLK  &none  &none
&none   &none           &none           &none         &none      &none               &kp PAGE_DOWN  &none      &none   &none      &none      &none
&trans  &mo 5          &mkp RCLK          &mkp LCLK        &mkp MCLK                         &trans  &trans                                                  &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
        symbol_layer {
            label = "SYM";
            bindings = <
&none   &none  &none    &none         &none         &none                                  &kp LBRC           &kp AMPS   &kp ASTRK   &kp LPAR    &kp RBRC  &kp BSLH
&trans   &kp LGUI      &kp LALT      &kp LCTRL   &kp LSHIFT     &kp INS                    &kp COLON           &kp DOLLAR   &kp PRCNT   &kp CARET   &kp SEMI  &kp GT
&trans   &none         &none         &none         &none         &none                     &kp GRAVE    &kp EXCL    &kp AT  &kp HASH &kp UNDER   &kp LT
&trans  &trans        &trans        &trans        &trans                          &LPAR  &RPAR                                                                &trans
            >;
        };
    };
};
